syntax = "proto3";

package api.contacts;

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "github.com/lyft/protoc-gen-validate/validate/validate.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "github.com/infobloxopen/protoc-gen-gorm/options/gorm.proto";

option go_package = "github.com/infobloxopen/atlas-contacts-app/pkg/pb;pb";

message Contact {
    option (gorm.opts).ormable = true;
    uint64 id = 1;
    string first_name = 2;
    string middle_name = 3;
    string last_name = 4;
    string primary_email = 6 [(gorm.field).drop = true, (validate.rules).string.email = true];
    repeated Email emails = 7;
}

message Email {
    option (gorm.opts) = {
      ormable: true,
      include: [
      {type: "bool", name: "is_primary"}, {type: "uint64", name: "Contact_id"}]
    };
    uint64 id = 1;
    string address = 2 [(validate.rules).string.email = true];
}

message CreateContactRequest {
    Contact payload = 1;
}

message CreateContactResponse {
    Contact result = 1;
}

message ReadContactRequest {
    uint64 id = 1;
}

message ReadContactResponse {
    Contact result = 1;
}

message UpdateContactRequest {
    Contact payload = 1;
}

message UpdateContactResponse {
    Contact result = 1;
}

message DeleteContactRequest {
    uint64 id = 1;
}

message ListContactsResponse {
    repeated Contact results = 1;
}

message SMSRequest {
    uint64 id = 1;
    string message = 2;
}

service Contacts {
    option (gorm.server).autogen = true;
    rpc Create (CreateContactRequest) returns (CreateContactResponse) {
        option (google.api.http) = {
            post: "/contacts"
            body: "payload"
        };
    }

    rpc Read (ReadContactRequest) returns (ReadContactResponse) {
        option (google.api.http) = {
            get: "/contacts/{id}"
        };
    }

    rpc Update (UpdateContactRequest) returns (UpdateContactResponse) {
        option (google.api.http) = {
            put: "/contacts/{payload.id}"
            body: "payload"
        };
    }

    rpc Delete (DeleteContactRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            delete: "/contacts/{id}"
        };
        option (gorm.method).object_type = "Contact";
    }

    rpc List (google.protobuf.Empty) returns (ListContactsResponse) {
        option (google.api.http) = {
            get: "/contacts"
        };
    }

    rpc SendSMS (SMSRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/contacts/{id}/sms"
            body: "*"
        };
    }
}

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
  info: {
    title: "Contacts";
    version: "1.0";
    contact: {
      name: "John Belamaric";
      url: "https://github.com/infobloxopen/atlas-contacts-app";
      email: "jbelamaric@infoblox.com";
    };
  };
  schemes: HTTP;
  schemes: HTTPS;
  consumes: "application/json";
  produces: "application/json";
};
